---
name: Release
on:
  push:
    branches:
      - master
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout source code
        uses: 'actions/checkout@v3'
        with:
          fetch-depth: 2

      - name: Bump package version
        id: version
        uses: 'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target-branch: 'master'
          tag-prefix: 'v'

      - name: Create new GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.newTag }}

  deploy-helm:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          submodules: true

      - name: Get Latest tag
        id: latesttag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 'UNKNOWN' # Optional fallback tag to use when no tag can be found foo

      # Copy the helm chart to the correct place for the below action to work
      - name: Move helm chart to correct position
        run: |
          mkdir -p charts/app && \
          cp -r provisioning/helm/charts/microservice charts/app

      - name: Deploy PC
        uses: glopezep/helm@v1.7.1
        with:
          helm: helm3
          release: ps2alerts-collector
          namespace: ps2alerts
          chart: provisioning/helm/charts/microservice
          secrets: ${{ toJSON(secrets) }}
          token: ${{ github.token }}
          value-files: provisioning/production/values-pc.yaml
          version: ${{ steps.latesttag.outputs.tag }}
          timeout: 120s
        env:
          KUBECONFIG_FILE: "${{ secrets.KUBE_CONFIG_RAW }}"

      # Outputs the rollout status and returns a 0 signal (thus completing the workflow) once it's rolled out.
      - uses: actions-hub/kubectl@master
        name: Wait for deployment to finish
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout status deployment/ps2alerts-aggregator-pc-production -n ps2alerts
